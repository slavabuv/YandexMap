////  YandexMapView.m//  YandexMap////  Created by Slava on 11/23/11.//  Copyright 2011 slavabuv@yandex.ru All rights reserved.//#import "YandexMapView.h"@implementation iYandexMapAnnotation@synthesize coordinate;@synthesize title;@synthesize subtitle;@synthesize ID;@end;@implementation YandexMapView@synthesize writeLog;@synthesize delegate;static NSString *strHTML = @"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\<html xmlns=\"http://www.w3.org/1999/xhtml\">\\<script type=\"text/javascript\" name=\"ScriptYandexMapHelper\">\\function setMapSize()\{\var map = document.getElementById('YMapsID');\map.style.width = window.iYMapHelper.getMapWidth()+\"px\";\map.style.height = window.iYMapHelper.getMapHeight()+\"px\";\}\\(function()\{\window.iYMapHelper =\{\size : {width:320,height:468},\center : {lon:37.64,lat:55.76},\zoom : 10,\placeMark : [],\\getMapSize: function ()\{\return this.size;\},\\setMapSize: function (size)\{\this.size = size;\YMaps.jQuery(\"#YMapsID\").css({\width: size.width || \"\", \height: size.height || \"\"\});\window.iYMap.redraw();\\return \"set Map size.width = \"+size.width+\" size.height = \"+size.height;\},\\getMapHeight: function ()\{\return this.size.height;\},\\setMapHeight: function (height)\{\this.size.height = height;\var map = document.getElementById('YMapsID');\map.style.height = height + \"px\";\return \"set Map height = \"+map.style.height;\},\\getMapWidth: function ()\{\return this.size.width;\},\\setMapWidth: function (width)\{\this.size.width = width;\var map = document.getElementById('YMapsID');\map.style.width = width + \"px\";\return \"set Map width = \"+map.style.width;\},\\getMapCenter: function ()\{\return this.center;\},\\setMapCenter: function (center)\{\this.center = center;\window.iYMap.setCenter(new YMaps.GeoPoint(this.lon, this.lat), this.zoom);\return \"set Map center.lon = \"+this.lon+ \" center.lat = \"+this.lat;\},\\getMapScale: function ()\{\return this.scale;\},\\setMapScalePlus: function ()\{\this.zoom ++;\window.iYMap.setZoom(this.zoom);\return \"set Map scale = \"+this.zoom;\},\\setMapScaleMinus: function ()\{\this.zoom --;\window.iYMap.setZoom(this.zoom);\return \"set Map scale = \"+this.zoom;\},\\scrollTo: function(x,y)\{\window.iYMap.setCenter(window.iYMap.converter.clientPixelsToCoordinates(new YMaps.Point(x, y)), this.zoom);\return \"scroll to x=\"+x+\", y=\"+y;\},\\addPlaceMark: function(placePoint, placeName, placeDescription, placeID )\{\var placemark = new YMaps.Placemark(new YMaps.GeoPoint(placePoint.lon, placePoint.lat));\placemark.name = placeName;\if ( placeDescription && placeID && placeDescription != '(null)' && placeID != '(null)' )\{\placemark.setBalloonContent('<div>'+placeName+' <a href=\"iYandexMapLib_PlaceMarkID='+placeID+'\">'+placeDescription+'</a></div>');\}\this.placeMark.push(placemark);\window.iYMap.addOverlay(placemark);\return \"placemark\";\},\\clearPlaceMark: function ()\{\for (var i in this.placeMark)\{\var placemark = this.placeMark[i];\window.iYMap.removeOverlay(placemark);\}\return \"clearPlaceMark\";\},\\};\})();\</script>\\<head>\<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\<script src=\"http://api-maps.yandex.ru/1.1/index.xml?key=%@==\" type=\"text/javascript\"></script>\<script type=\"text/javascript\">\YMaps.jQuery(function () {\window.iYMap = new YMaps.Map(YMaps.jQuery(\"#YMapsID\")[0]);\window.iYMap.setCenter(new YMaps.GeoPoint(37.64, 55.76), 10);\window.iYMap.redraw();\})\</script>\</head>\\<body style=\"padding:0;margin:0;\">\<div id=\"YMapsID\" style=\"width:320px;height:468px\"></div>\</body>\\</html>";- (id)initWithFrame:(CGRect)frame yandexAPIKey:(NSString *)yandexAPIKey{    self = [super initWithFrame:frame];    if (self)	{      	_mapAnnotations = [NSMutableArray new];		_scrollView = [[UIScrollView alloc] initWithFrame:frame];		[_scrollView setDelegate:self];		[_scrollView setMaximumZoomScale:5];		[_scrollView setMinimumZoomScale:1];		[_scrollView setZoomScale:1];		[_scrollView setContentSize:CGSizeMake(frame.size.width+1, frame.size.height+1)];		[_scrollView setMultipleTouchEnabled:YES];		[self addSubview:_scrollView];				_webView = [[UIWebView alloc] initWithFrame:frame];		[_webView setDelegate:self];		for (id subview in _webView.subviews)		{			if ([[subview class] isSubclassOfClass: [UIScrollView class]])			{				((UIScrollView *)subview).bounces = NO;			}		}		[_scrollView addSubview:_webView];		_key = yandexAPIKey;		//		NSString *webViewContent = [NSString stringWithFormat:strHTML, _key];		NSData *data = [webViewContent dataUsingEncoding:NSUTF8StringEncoding];		[_webView loadData:data  MIMEType:@"text/html" textEncodingName:@"UTF-8" baseURL:nil];				countView = 1;    }    return self;}- (void)dealloc{	delegate = nil;	[_mapAnnotations removeAllObjects];	[_mapAnnotations release];	[_scrollView release];	[_webView release];	    [super dealloc];}#pragma mark -#pragma mark Private-(void)writeToLog:(NSString *)str{	if (writeLog)	{		NSLog(@"%@",str);	}}#pragma mark -#pragma mark Public functions-(void)addAnnotations:(NSArray *)annotations{	[_mapAnnotations removeAllObjects];		if (annotations && [annotations count]>0)	{		[_mapAnnotations addObjectsFromArray:annotations];	}		if ([_mapAnnotations count]>0)	{		for (iYandexMapAnnotation *ann in _mapAnnotations)		{			[self writeToLog:[NSString stringWithFormat:@"addPlaceMark({lon:%f,lat:%f},\"%@\",\"%@\",\"%@\");",ann.coordinate.longitude,ann.coordinate.latitude,ann.title,ann.subtitle,ann.ID]];			[_webView stringByEvaluatingJavaScriptFromString:[NSString stringWithFormat:@"window.iYMapHelper.addPlaceMark({lon:%f,lat:%f},\"%@\",\"%@\",\"%@\");",ann.coordinate.longitude,ann.coordinate.latitude,ann.title,ann.subtitle,ann.ID]];		}	}	else	{		[self writeToLog:@"clearPlaceMark"];		[_webView stringByEvaluatingJavaScriptFromString:@"window.iYMapHelper.clearPlaceMark();"];	}}-(void)setFrame:(CGRect)frame{	[super setFrame:frame];	if (countView = 1)	{		[_scrollView setFrame:CGRectMake(0, 0, frame.size.width, frame.size.height)];		[_scrollView setContentSize:CGSizeMake(frame.size.width+1, frame.size.height+1)];		[_webView setFrame:CGRectMake(0, 0, frame.size.width, frame.size.height)];		[self writeToLog:[_webView stringByEvaluatingJavaScriptFromString:[NSString stringWithFormat:@"window.iYMapHelper.setMapSize({width:%0.f,height:%0.f});",frame.size.width,frame.size.height]]];			}}-(void)redraw{	[self writeToLog:@"window.iYMapHelper.redraw();"];}#pragma mark -#pragma mark UIWebViewDelegate- (void)webViewDidFinishLoad:(UIWebView *)webView{	}- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType{	NSString *urlKey = [[request URL] absoluteString];	NSRange range = [urlKey rangeOfString:@"iYandexMapLib_PlaceMarkID="];	if ( range.length > 0 )	{		NSString *strPlaceMarkID = [urlKey substringFromIndex:range.location + range.length];		[self writeToLog:[NSString stringWithFormat:@"Select placemark = %@",strPlaceMarkID]];		for (iYandexMapAnnotation*ann in _mapAnnotations)		{			if ([ann.ID isEqualToString:strPlaceMarkID])			{				if (delegate)				{					[delegate onAnnotationDetail:ann];				}			}		}		return NO;	}	return YES;}#pragma mark -#pragma mark UIScrollViewDelegate- (UIView *)viewForZoomingInScrollView:(UIScrollView *)scrollView{	return _webView;}- (void)scrollViewDidEndZooming:(UIScrollView *)scrollView withView:(UIView *)view atScale:(float)scale // scale between minimum and maximum. called after any 'bounce' animations{	if (scrollView.zoomScale>1)	{		[self writeToLog:[NSString stringWithFormat:@"%@",[_webView stringByEvaluatingJavaScriptFromString:@"window.iYMapHelper.setMapScalePlus();"]]];		}	else	{		[self writeToLog:[NSString stringWithFormat:@"%@",[_webView stringByEvaluatingJavaScriptFromString:@"window.iYMapHelper.setMapScaleMinus();"]]];	}		scrollView.zoomScale = 1;	[self setFrame:[self frame]];}- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate; // called on finger up if user dragged. decelerate is true if it will continue moving afterwards{	[self writeToLog:[NSString stringWithFormat:@"%@",[_webView stringByEvaluatingJavaScriptFromString:[NSString stringWithFormat:@"window.iYMapHelper.scrollTo(%i,%i);",_newCenterX,_newCenterY]]]];}- (void)scrollViewDidScroll:(UIScrollView *)scrollView{	_newCenterX = self.frame.size.width/2 + scrollView.contentOffset.x;	_newCenterY = self.frame.size.height/2 + scrollView.contentOffset.y;}@end